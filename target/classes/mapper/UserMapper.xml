<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jie.dao.UserMapper">
    <resultMap id="userResultMap" type="com.jie.bean.User">
        <result column="userPhone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="userPassword" property="userPassword" jdbcType="VARCHAR"/>
        <result column="userId" property="userId" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.jie.bean.User" extends="userResultMap">
        <result column="userPortrait" property="userPortrait" jdbcType="LONGVARBINARY"/>
    </resultMap>
    <insert id="insert" parameterType="com.jie.bean.User">
    insert into table_user_info (userPhone, userName, userPassword,  userPortrait)
    values (#{userPhone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userPortrait,jdbcType=LONGVARBINARY})
  </insert>
    <select id="getUser" parameterType="String" resultType="com.jie.bean.User">
      select * from table_user_info where userId=#{id}
  </select>
    <select id="getUserId" parameterType="String" resultType="int">
        select userId from table_user_info where userPhone=#{userPhone}
    </select>
    <select id="getUserByPhone" parameterType="String" resultType="com.jie.bean.User">
    select * from table_user_info where userPhone=#{userPhone}
  </select>
    <insert id="insertSelective" parameterType="com.jie.bean.User">
        insert into table_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userPhone != null">
                userPhone,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="userPassword != null">
                userPassword,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="userPortrait != null">
                userPortrait,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userPhone != null">
                #{userphone,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userpassword,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="userPortrait != null">
                #{userportrait,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>

    <insert id="bindDevice" parameterType="com.jie.bean.myDevice">
     insert into myDevices
      values (#{subId},#{userId},#{isManager},#{deviceId},#{position},#{alias})
  </insert>
    <select id="getNumberFromMyDevices" parameterType="int" resultType="int">
        select COUNT(userId)
          from myDevices
         WHERE userId=#{userId}
    </select>
    <delete id="UnbundlingDevice" parameterType="com.jie.bean.myDevice">
     delete from myDevices where subId=#{subId} and userId=#{userId}
  </delete>
    <select id="selectMyhistoryDevices" parameterType="int" resultType="com.jie.bean.myDeviceHistory">
      select * from myDeviceHistory  where userId=#{userId}
  </select>
    <select id="selectMyHistoryDeviceNameAndId" parameterType="int" resultType="Map">
select DISTINCT deviceName,device.deviceId from device,myDeviceHistory WHERE userId=#{userId}  and device.deviceId=myDeviceHistory.deviceId
  </select>
    <select id="getDevices" parameterType="int" resultType="com.jie.bean.myDevice">
    select *
    from myDevices,device
     where
        userId=#{userId} and device.deviceId=myDevices.deviceId
  </select>
    <select id="getDevicePositionInMyDevices" resultType="int">
        select position
        from myDevices
        where userId=#{userId} and subId=#{subId}
    </select>
    <update id="updateDevicePositionInMyDevices">
        update myDevices
        set position=
        <choose>
            <when test="subId==null">position+1 where #{position}>position and</when>
            <otherwise>0 where subId=#{subId} and</otherwise>
        </choose>
        userId=#{userId}
    </update>
    <update id="updateMyDevices">
        update myDevices
        set userId=#{userId}
        <if test="alias">, alias=#{alias}</if>
        where userId=#{userId} and subId=#{subId}
    </update>
    <update id="updatePortrait" parameterType="String">
        updselectDevicePointsate  table_user_info
        set userPortrait=#{userPortrait}
    </update>
    <insert id="insertDevicePoints"><!--收藏一组坐标供用户快捷使用！-->
        <!--insert into device_points
          values (#{deviceId},#{userId},#{points})-->
        insert into device_points
        VALUES(#{deviceId},#{userId},#{points},( SELECT COUNT(position)
        FROM
        (select position
        from device_points
        WHERE
        deviceId =#{deviceId} AND userID =#{userId}) t )+1
        )
    </insert>
    <delete id="deleteDevicePoints">
        delete from device_points
        where position=#{position} and deviceId=#{deviceId} and userId=#{userId}
    </delete>
    <update id="fixDevicePointsPosition" parameterType="int">
        update device_points
         set position=position-1
         where  position>#{position} and deviceId=#{deviceId} and userId=#{userId}
    </update>
    <select id="selectDevicePoints" resultType="String">
        select points
        from  device_points
       where deviceId=#{deviceId} and userIdgetSubNameById=#{userId}
    </select>
    <select id="selectDevicePointsCount" resultType="int">
        select count (position)
        from  device_points
       where deviceId=#{deviceId} and userId=#{userId}
    </select>
    <select id="selectDevicePositionAndPoints" resultType="com.jie.bean.PositionAndPoints">
        select points,position
        from  device_points
       where deviceId=#{deviceId} and userId=#{userId}
    </select>
    <select id="getMyDeviceHistoryIds" parameterType="int" resultType="hashmap">
    select dsMapper.subId as subId,deviceId,GROUP_CONCAT(`historyId`) as historyIds
           FROM myDeviceHistory,dsMapper
            where userId=#{userId} and dsMapper.subId=myDeviceHistory.subId
              GROUP BY (dsMapper.subId)
    </select>
    <select id="getSubNameById" resultType="String">
        select alias from myDevices
        where userId=#{userId} and subId=#{subId}
    </select>
    <select id="getDeviceIdByHistoryId" resultType="int">
        select deviceId
        from myDeviceHistory,dsMapper
        where historyId=#{historyId} and userId=#{userId} and dsMapper.subId=myDeviceHistory.subId
    </select>
    <select id="getBathHistoryByHistoryId" resultType="HashMap">
        select *
        from myBathHistory
        where historyId=#{historyId}
    </select>
    <select id="getMyManageDevice" resultType="HashMap">
        select *
        from manager
        where userId=#{userId} and subId=#{subId}
    </select>
    <update id="updateMyManageDevice" parameterType="Map">
        update manager
        set userId=#{userId}
        <if test="musers!=null">, musers=#{musers}</if>
        <if test="maxCapacity!=null">, maxCapacity=#{maxCapacity}</if>
        <if test="authorizedCode!=null">, authorizedCode=#{authorizedCode}</if>
        where userId=#{userId} and subId=#{subId}
    </update>
    <update id="updatePositionFromMyDevices">
        update  myDevices
         set position=position-1
            where position >
                 (
                   SELECT position
                        FROM
                          (select position
                            from myDevices
                            WHERE
                            subId=#{subId} and userId=#{userId}
                         ) t
                 )  and userId=#{userId}
    </update>
    <delete id="deleteDeviceFromMyDevices">
        DELETE FROM myDevices
              WHERE  subId=#{subId} and userId=#{userId}
    </delete>
    <insert id="addManager" parameterType="map">
          insert into manager
           (userId,musers,subId,authorizedCode,maxCapacity)
          VALUES (#{userId},#{musers},#{subId},#{authorizedCode},#{maxCapacity})
    </insert>
    <select id="getSubIdFromManagerByauthorizedCode" parameterType="String" resultType="Integer">
        select subId
        from manager
        where authorizedCode=#{authorizedCode}
    </select>
    <select id="getMyAlias" parameterType="int" resultType="map">
        select subId,alias
        from myDevices
        where userId=#{userId}
    </select>
    <select id="getSubHistoryIds" resultType="int">
        select historyId
            from myDeviceHistory
             WHERE userId=#{userId} and subId=#{subId}
    </select>
    <select id="getMyAlia" resultType="java.lang.String">
         select  alias
         from myDevices
         where userId=#{userId} and subId=#{subId}
    </select>
    <insert id="insertMyDeviceHistory" parameterType="com.jie.bean.myDeviceHistory" useGeneratedKeys="true"
            keyProperty="historyId" keyColumn="historyId">
        insert into myDeviceHistory
        (userId,subId) VALUES (#{userId},#{subId})
    </insert>
    <insert id="insertMyBathHistory">
         insert into myBathHistory values
         (#{historyId},#{startTime},#{endTime},#{points})
    </insert>
</mapper>